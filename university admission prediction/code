# Author: Sumit chatterjee -- <csumit249@gmail.com>
# Datascience 

import numpy as np
import pandas as pd
import seaborn as sb
import matplotlib.pyplot as plt
data = pd.read_csv("D:\Admission_Predict.csv")
filtersheet = data.drop('Serial No.',axis=1)
plt.imshow(filtersheet[0:5], cmap='hot', interpolation='nearest')
plt.show()
filtersheet = filtersheet.iloc[0:50]
arr = np.array(filtersheet)
fig, ax = plt.subplots()
sb.heatmap(arr)
plt.show()

#######################################################################################################

import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
data = pd.read_csv("D:\Admission_Predict.csv")
filtersheet = data.drop('Serial No.',axis=1)
# matplotlib histogram
plt.hist(filtersheet['TOEFL Score'], color = 'blue', edgecolor = 'black',bins = int(180/5))

# Add labels
plt.title('Histogram of TOEFL Score')
plt.xlabel('GRE SCORE')
plt.ylabel('Frequency of TOFEL Score')

############################################################################################################
import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
data = pd.read_csv("D:\Admission_Predict.csv")
filtersheet = data.drop('Serial No.',axis=1)
# matplotlib histogram
sns.distplot(filtersheet['TOEFL Score'], hist=True, kde=True, 
             bins=int(180/5), color = 'darkblue', 
             hist_kws={'edgecolor':'black'},
             kde_kws={'linewidth': 4})
# Add labels
plt.title('Histogram of TOFL Score')
plt.xlabel('TOFL Score')
plt.ylabel('Frequency of TOFL Score')

##############################################################################################################
import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from scipy.stats import norm
# generate random numbers from N(0,1)
data = pd.read_csv("D:\Admission_Predict.csv")
filtersheet = data.drop('Serial No.',axis=1)
filtersheet = filtersheet.iloc[0:50]

# Iterate through the five airlines
    # Draw the density plot
corr = filtersheet.corr()
sns.heatmap(corr, 
        xticklabels=corr.columns,
        yticklabels=corr.columns)
# Plot formatting

########################################################################################################################
import pandas as pd
import numpy as np
import seaborn as sb
import matplotlib.pyplot as plt
from sklearn import datasets, linear_model
from sklearn import metrics
from sklearn.metrics import mean_squared_error, r2_score
import sklearn.model_selection as model_selection
data = pd.read_csv("D:\Admission_Predict.csv")
filtersheet = data.drop('Serial No.',axis=1)

y = filtersheet['Chance of Admit ']
x = filtersheet['GRE Score']

x_train, x_test, y_train, y_test = model_selection.train_test_split(x, y, train_size=0.5,test_size=0.5, random_state=101)
x_train = x_train[:, np.newaxis]
x_test = x_test[:, np.newaxis]
print(x_test.shape,y_test.shape)

regr = linear_model.LinearRegression()
# Train the model using the training sets
regr.fit(x_train, y_train)
output = regr.predict(x_test)
print('Coefficients: \n', regr.coef_)
# The mean squared error
print('Mean squared error: %.2f'
      % mean_squared_error(y_test, output))
# The coefficient of determination: 1 is perfect prediction
print('Coefficient of determination: %.2f'
      % r2_score(y_test, output))

# Plot outputs
plt.scatter(x_test, y_test,  color='black')
plt.plot(x_test, output, color='blue', linewidth=3)

plt.xticks(())
plt.yticks(())

plt.show()
#########################################################################################################

import pandas as pd
import numpy as np
import seaborn as sb
import matplotlib.pyplot as plt
from sklearn import datasets, linear_model
from sklearn import metrics
from sklearn.metrics import mean_squared_error, r2_score
import sklearn.model_selection as model_selection
data = pd.read_csv("D:\Admission_Predict.csv")
filtersheet = data.drop('Serial No.',axis=1)
x = pd.DataFrame(filtersheet[['GRE Score','TOEFL Score','University Rating','LOR ','SOP','CGPA','Research']])
y = filtersheet['Chance of Admit ']


x_train, x_test, y_train, y_test = model_selection.train_test_split(x, y, train_size=0.75,test_size=0.25, random_state=101)

print(x_test.shape,y_test.shape)

regr = linear_model.LinearRegression()
# Train the model using the training sets
regr.fit(x_train, y_train)
output = regr.predict(x_test)
x_testout = [340,105,2,3.5,2.5,8.3,1]
arra = np.array(x_testout)
x_testot = arra[np.newaxis,:]
print(x_testot.shape)
outputa = regr.predict(x_testot)
print(outputa)
print('Coefficients: \n', regr.coef_)
# The mean squared error
print('Mean squared error: %.2f'
      % mean_squared_error(y_test, output))
# The coefficient of determination: 1 is perfect prediction
print('Coefficient of determination: %.2f'
      % r2_score(y_test, output))

# Plot outputs

#####################################################################################################################

import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns
a = []
data = pd.read_csv("D:\Admission_Predict.csv")
filtersheet = data.drop('Serial No.',axis=1)
dataset = pd.DataFrame(filtersheet[['LOR ','SOP','CGPA']])
dataa = dataset.iloc[0:20]
sns.boxplot(data=dataa,orient="v")
plt.show()

